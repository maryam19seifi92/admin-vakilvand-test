import "./chunk-PLDDJCW6.js";

// node_modules/@bhplugin/vue3-datatable/dist/vue3-datatable.js
import { defineComponent as j, onBeforeUnmount as Ye, onMounted as Ae, openBlock as c, createElementBlock as h, createElementVNode as i, withModifiers as K, normalizeClass as v, Fragment as F, createCommentVNode as C, ref as $, watch as B, createVNode as N, renderList as P, normalizeStyle as ze, createTextVNode as Be, toDisplayString as H, withDirectives as R, vModelText as Z, vModelSelect as Ne, vShow as Je, createStaticVNode as Qe, useSlots as Xe, computed as G, unref as q, vModelCheckbox as Ze, renderSlot as je } from "vue";
var et = { class: "bh-filter-menu bh-absolute bh-z-[1] bh-bg-white bh-shadow-md bh-rounded-md bh-top-full bh-right-0 bh-w-32 bh-mt-1" };
var tt = ["onClick"];
var lt = j({
  __name: "column-filter",
  props: ["column"],
  emits: ["close", "filterChange"],
  setup(m, { emit: k }) {
    const a = m;
    Ye(() => {
      document.removeEventListener("click", n);
    }), Ae(() => {
      document.addEventListener("click", n);
    });
    const n = () => {
      k("close");
    }, p = (w) => {
      a.column.condition = w, w === "" && (a.column.value = ""), k("filterChange", a.column);
    };
    return (w, l) => (c(), h("div", et, [
      i("div", {
        class: "bh-text-[13px] bh-font-normal bh-rounded bh-overflow-hidden",
        onClick: K(n, ["stop"])
      }, [
        i("button", {
          type: "button",
          class: v({ active: a.column.condition === "" }),
          onClick: l[0] || (l[0] = (o) => p(""))
        }, "No filter", 2),
        a.column.type === "string" ? (c(), h(F, { key: 0 }, [
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "contain" }),
            onClick: l[1] || (l[1] = (o) => p("contain"))
          }, "Contain", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "not_contain" }),
            onClick: l[2] || (l[2] = (o) => p("not_contain"))
          }, "Not contain", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "equal" }),
            onClick: l[3] || (l[3] = (o) => p("equal"))
          }, "Equal", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "not_equal" }),
            onClick: l[4] || (l[4] = (o) => p("not_equal"))
          }, "Not equal", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "start_with" }),
            onClick: l[5] || (l[5] = (o) => p("start_with"))
          }, "Starts with", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "end_with" }),
            onClick: l[6] || (l[6] = (o) => p("end_with"))
          }, "Ends with", 2)
        ], 64)) : a.column.type === "number" ? (c(), h(F, { key: 1 }, [
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "equal" }),
            onClick: l[7] || (l[7] = (o) => p("equal"))
          }, "Equal", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "not_equal" }),
            onClick: l[8] || (l[8] = (o) => p("not_equal"))
          }, "Not Equal", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "greater_than" }),
            onClick: l[9] || (l[9] = (o) => p("greater_than"))
          }, "Greater than", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "greater_than_equal" }),
            onClick: l[10] || (l[10] = (o) => p("greater_than_equal"))
          }, "Greater than or equal", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "less_than" }),
            onClick: l[11] || (l[11] = (o) => p("less_than"))
          }, "Less than", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "less_than_equal" }),
            onClick: l[12] || (l[12] = (o) => p("less_than_equal"))
          }, "Less than or equal", 2)
        ], 64)) : a.column.type === "date" ? (c(), h(F, { key: 2 }, [
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "equal" }),
            onClick: l[13] || (l[13] = (o) => p("equal"))
          }, "Equal", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "not_equal" }),
            onClick: l[14] || (l[14] = (o) => p("not_equal"))
          }, "Not equal", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "greater_than" }),
            onClick: l[15] || (l[15] = (o) => p("greater_than"))
          }, "Greater than", 2),
          i("button", {
            type: "button",
            class: v({ active: a.column.condition === "less_than" }),
            onClick: l[16] || (l[16] = (o) => p("less_than"))
          }, "Less than", 2)
        ], 64)) : C("", true),
        i("button", {
          type: "button",
          class: v({ active: a.column.condition === "is_null" }),
          onClick: l[17] || (l[17] = (o) => p("is_null"))
        }, "Is null", 2),
        i("button", {
          type: "button",
          class: v({ active: a.column.condition === "is_not_null" }),
          onClick: l[18] || (l[18] = (o) => p("is_not_null"))
        }, "Not null", 2)
      ], 8, tt)
    ]));
  }
});
var Q = (m, k) => {
  const a = m.__vccOpts || m;
  for (const [n, p] of k)
    a[n] = p;
  return a;
};
var nt = {};
var ot = {
  version: "1.1",
  viewBox: "0 0 17 12",
  xmlns: "http://www.w3.org/2000/svg"
};
var st = i("g", {
  fill: "none",
  "fill-rule": "evenodd"
}, [
  i("g", {
    transform: "translate(-9 -11)",
    fill: "currentColor",
    "fill-rule": "nonzero"
  }, [
    i("path", { d: "m25.576 11.414c0.56558 0.55188 0.56558 1.4439 0 1.9961l-9.404 9.176c-0.28213 0.27529-0.65247 0.41385-1.0228 0.41385-0.37034 0-0.74068-0.13855-1.0228-0.41385l-4.7019-4.588c-0.56584-0.55188-0.56584-1.4442 0-1.9961 0.56558-0.55214 1.4798-0.55214 2.0456 0l3.679 3.5899 8.3812-8.1779c0.56558-0.55214 1.4798-0.55214 2.0456 0z" })
  ])
], -1);
var at = [
  st
];
function rt(m, k) {
  return c(), h("svg", ot, at);
}
var Re = Q(nt, [["render", rt]]);
var it = {};
var ut = {
  viewBox: "0 0 24 24",
  width: "24",
  height: "24",
  stroke: "currentColor",
  "stroke-width": "3",
  fill: "none",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "css-i6dzq1"
};
var ct = i("line", {
  x1: "5",
  y1: "12",
  x2: "19",
  y2: "12"
}, null, -1);
var ht = [
  ct
];
function dt(m, k) {
  return c(), h("svg", ut, ht);
}
var ft = Q(it, [["render", dt]]);
var vt = {};
var bt = {
  viewBox: "0 0 24 24",
  width: "24",
  height: "24",
  stroke: "currentColor",
  "stroke-width": "1.5",
  fill: "none",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "css-i6dzq1"
};
var pt = i("polygon", { points: "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3" }, null, -1);
var gt = [
  pt
];
function yt(m, k) {
  return c(), h("svg", bt, gt);
}
var Ct = Q(vt, [["render", yt]]);
var kt = { key: "hdrrow" };
var mt = { class: "bh-checkbox" };
var _t = ["onClick"];
var wt = {
  width: "16",
  height: "16",
  viewBox: "0 0 14 14",
  fill: "none"
};
var $t = {
  key: 0,
  class: "bh-filter bh-relative"
};
var xt = ["onUpdate:modelValue"];
var St = ["onUpdate:modelValue"];
var Ft = ["onUpdate:modelValue"];
var Lt = ["onUpdate:modelValue"];
var qt = i("option", { value: void 0 }, "All", -1);
var Mt = i("option", { value: true }, "True", -1);
var At = i("option", { value: false }, "False", -1);
var zt = [
  qt,
  Mt,
  At
];
var Bt = ["onClick"];
var Me = j({
  __name: "column-header",
  props: ["all", "currentSortColumn", "currentSortDirection", "isOpenFilter", "isFooter", "checkAll"],
  emits: ["selectAll", "sortChange", "filterChange", "toggleFilterMenu"],
  setup(m, { emit: k }) {
    const a = m, n = $(null);
    return B(() => a.checkAll, () => {
      n.value && (n.value.indeterminate = a.checkAll !== 0 ? !a.checkAll : false, n.value.checked = a.checkAll);
    }), (w, l) => (c(), h("tr", kt, [
      a.all.hasCheckbox ? (c(), h("th", {
        key: "chkall",
        class: v(["bh-w-px", {
          "bh-sticky bh-bg-blue-light bh-z-[1]": a.all.stickyHeader || a.all.stickyFirstColumn,
          "bh-top-0": a.all.stickyHeader,
          "bh-left-0": a.all.stickyFirstColumn
        }])
      }, [
        i("div", mt, [
          i("input", {
            ref_key: "selectedAll",
            ref: n,
            type: "checkbox",
            onClick: l[0] || (l[0] = K((o) => k("selectAll", o.target.checked), ["stop"]))
          }, null, 512),
          i("div", null, [
            N(Re, { class: "check" }),
            N(ft, { class: "intermediate" })
          ])
        ])
      ], 2)) : C("", true),
      (c(true), h(F, null, P(a.all.columns, (o, x) => (c(), h(F, null, [
        o.hide ? C("", true) : (c(), h("th", {
          key: o.field,
          class: v(["bh-select-none bh-z-[1]", [
            a.all.sortable && o.sort ? "bh-cursor-pointer" : "",
            x === 0 && a.all.stickyFirstColumn ? "bh-sticky bh-left-0 bh-bg-blue-light" : "",
            a.all.hasCheckbox && x === 0 && a.all.stickyFirstColumn ? "bh-left-[52px]" : ""
          ]]),
          style: ze({
            width: o.width,
            "min-width": o.minWidth,
            "max-width": o.maxWidth
          })
        }, [
          i("div", {
            class: v(["bh-flex bh-items-center", [o.headerClass ? o.headerClass : ""]]),
            onClick: (y) => a.all.sortable && o.sort && k("sortChange", o.field)
          }, [
            Be(H(o.title) + " ", 1),
            a.all.sortable && o.sort ? (c(), h("span", {
              key: 0,
              class: v(["bh-ml-3 bh-sort bh-flex bh-items-center", [a.currentSortColumn, a.currentSortDirection]])
            }, [
              (c(), h("svg", wt, [
                i("polygon", {
                  points: "3.11,6.25 10.89,6.25 7,1.75 ",
                  fill: "currentColor",
                  class: v(["bh-text-black/20", [m.currentSortColumn === o.field && m.currentSortDirection === "asc" ? "!bh-text-primary" : ""]])
                }, null, 2),
                i("polygon", {
                  points: "7,12.25 10.89,7.75 3.11,7.75 ",
                  fill: "currentColor",
                  class: v(["bh-text-black/20", [m.currentSortColumn === o.field && m.currentSortDirection === "desc" ? "!bh-text-primary" : ""]])
                }, null, 2)
              ]))
            ], 2)) : C("", true)
          ], 10, _t),
          a.all.columnFilter && !a.isFooter ? (c(), h(F, { key: 0 }, [
            o.filter ? (c(), h("div", $t, [
              o.type === "string" ? R((c(), h("input", {
                key: 0,
                "onUpdate:modelValue": (y) => o.value = y,
                type: "text",
                class: "bh-form-control",
                onKeyup: l[1] || (l[1] = (y) => k("filterChange"))
              }, null, 40, xt)), [
                [
                  Z,
                  o.value,
                  void 0,
                  { trim: true }
                ]
              ]) : C("", true),
              o.type === "number" ? R((c(), h("input", {
                key: 1,
                "onUpdate:modelValue": (y) => o.value = y,
                type: "number",
                class: "bh-form-control",
                onKeyup: l[2] || (l[2] = (y) => k("filterChange"))
              }, null, 40, St)), [
                [
                  Z,
                  o.value,
                  void 0,
                  {
                    number: true,
                    trim: true
                  }
                ]
              ]) : o.type === "date" ? R((c(), h("input", {
                key: 2,
                "onUpdate:modelValue": (y) => o.value = y,
                type: "date",
                class: "bh-form-control",
                onChange: l[3] || (l[3] = (y) => k("filterChange"))
              }, null, 40, Ft)), [
                [Z, o.value]
              ]) : o.type === "bool" ? R((c(), h("select", {
                key: 3,
                "onUpdate:modelValue": (y) => o.value = y,
                class: "bh-form-control",
                onChange: l[4] || (l[4] = (y) => k("filterChange")),
                onClick: l[5] || (l[5] = (y) => a.isOpenFilter = null)
              }, zt, 40, Lt)), [
                [Ne, o.value]
              ]) : C("", true),
              o.type !== "bool" ? (c(), h("button", {
                key: 4,
                type: "button",
                onClick: K((y) => k("toggleFilterMenu", o), ["stop"])
              }, [
                N(Ct, { class: "bh-w-4" })
              ], 8, Bt)) : C("", true),
              R(N(lt, {
                column: o,
                type: o.type,
                onClose: l[6] || (l[6] = (y) => k("toggleFilterMenu", null)),
                onFilterChange: l[7] || (l[7] = (y) => k("filterChange"))
              }, null, 8, ["column", "type"]), [
                [Je, a.isOpenFilter === o.field]
              ])
            ])) : C("", true)
          ], 64)) : C("", true)
        ], 6))
      ], 64))), 256))
    ]));
  }
});
var Nt = {};
var Rt = {
  width: "84",
  height: "84",
  viewBox: "0 0 24 24",
  class: "bh-loader bh-text-primary"
};
var Dt = Qe('<circle cx="18" cy="12" r="0" fill="currentColor"><animate attributeName="r" begin=".67" calcMode="spline" dur="1.5s" keySplines="0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8" repeatCount="indefinite" values="0;2;0;0"></animate></circle><circle cx="12" cy="12" r="0" fill="currentColor"><animate attributeName="r" begin=".33" calcMode="spline" dur="1.5s" keySplines="0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8" repeatCount="indefinite" values="0;2;0;0"></animate></circle><circle cx="6" cy="12" r="0" fill="currentColor"><animate attributeName="r" begin="0" calcMode="spline" dur="1.5s" keySplines="0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8" repeatCount="indefinite" values="0;2;0;0"></animate></circle>', 3);
var Pt = [
  Dt
];
function Ht(m, k) {
  return c(), h("svg", Rt, Pt);
}
var Tt = Q(Nt, [["render", Ht]]);
var Ot = { class: "bh-datatable bh-antialiased bh-relative bh-text-black bh-text-sm bh-font-normal" };
var Vt = ["onClick"];
var Ut = { class: "bh-checkbox" };
var Et = ["value"];
var It = ["innerHTML"];
var Gt = { key: 1 };
var Kt = ["colspan"];
var Wt = ["colspan"];
var Yt = i("div", { class: "bh-skeleton-box bh-h-8" }, null, -1);
var Jt = [
  Yt
];
var Qt = {
  key: 0,
  class: "bh-absolute bh-inset-0 bh-bg-blue-light/50 bh-grid bh-place-content-center"
};
var Xt = {
  key: 0,
  class: "bh-pagination bh-py-5"
};
var Zt = { class: "bh-flex bh-items-center bh-flex-wrap bh-flex-col sm:bh-flex-row bh-gap-4" };
var jt = { class: "bh-pagination-info bh-flex bh-items-center" };
var el = { class: "bh-mr-2" };
var tl = ["value"];
var ll = { class: "bh-pagination-number sm:bh-ml-auto bh-inline-flex bh-items-center bh-space-x-1" };
var nl = ["innerHTML"];
var ol = {
  key: 1,
  "aria-hidden": "true",
  width: "14",
  height: "14",
  viewBox: "0 0 16 16"
};
var sl = i("g", {
  fill: "currentColor",
  "fill-rule": "evenodd"
}, [
  i("path", { d: "M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" }),
  i("path", { d: "M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" })
], -1);
var al = [
  sl
];
var rl = ["innerHTML"];
var il = {
  key: 1,
  "aria-hidden": "true",
  width: "14",
  height: "14",
  viewBox: "0 0 16 16"
};
var ul = i("path", {
  fill: "currentColor",
  "fill-rule": "evenodd",
  d: "M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"
}, null, -1);
var cl = [
  ul
];
var hl = ["onClick"];
var dl = ["innerHTML"];
var fl = {
  key: 1,
  "aria-hidden": "true",
  width: "14",
  height: "14",
  viewBox: "0 0 16 16"
};
var vl = i("path", {
  fill: "currentColor",
  "fill-rule": "evenodd",
  d: "M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8L4.646 2.354a.5.5 0 0 1 0-.708z"
}, null, -1);
var bl = [
  vl
];
var pl = ["innerHTML"];
var gl = {
  key: 1,
  "aria-hidden": "true",
  width: "14",
  height: "14",
  viewBox: "0 0 16 16"
};
var yl = i("g", {
  fill: "currentColor",
  "fill-rule": "evenodd"
}, [
  i("path", { d: "M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8L3.646 2.354a.5.5 0 0 1 0-.708z" }),
  i("path", { d: "M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8L7.646 2.354a.5.5 0 0 1 0-.708z" })
], -1);
var Cl = [
  yl
];
var xl = j({
  __name: "custom-table",
  props: {
    loading: { type: Boolean, default: false },
    isStatic: { type: Boolean, default: true },
    skin: { default: "bh-table-striped bh-table-hover" },
    totalRows: { default: 0 },
    rows: { default: () => [] },
    columns: { default: () => [] },
    hasCheckbox: { type: Boolean, default: false },
    search: { default: "" },
    columnChooser: { type: Boolean, default: false },
    page: { default: 1 },
    pageSize: { default: 10 },
    pageSizeOptions: { default: () => [10, 20, 30, 50, 100] },
    showPageSize: { type: Boolean, default: true },
    rowClass: { default: [] },
    cellClass: { default: [] },
    sortable: { type: Boolean, default: false },
    sortColumn: { default: "id" },
    sortDirection: { default: "asc" },
    columnFilter: { type: Boolean, default: false },
    pagination: { type: Boolean, default: true },
    showNumbers: { type: Boolean, default: true },
    showNumbersCount: { default: 5 },
    showFirstPage: { type: Boolean, default: true },
    showLastPage: { type: Boolean, default: true },
    firstArrow: { default: "" },
    lastArrow: { default: "" },
    nextArrow: { default: "" },
    previousArrow: { default: "" },
    paginationInfo: { default: "Showing {0} to {1} of {2} entries" },
    noDataContent: { default: "No data available" },
    stickyHeader: { type: Boolean, default: false },
    height: { default: "500px" },
    stickyFirstColumn: { type: Boolean, default: false },
    cloneHeaderInFooter: { type: Boolean, default: false },
    selectRowOnClick: { type: Boolean, default: false }
  },
  emits: ["sortChange", "searchChange", "pageChange", "pageSizeChange", "rowSelect", "filterChange", "rowClick", "rowDBClick"],
  setup(m, { expose: k, emit: a }) {
    var ce;
    const n = m, p = Xe();
    for (const e of n.columns || []) {
      const s = ((ce = e.type) == null ? void 0 : ce.toLowerCase()) || "string";
      e.type = s, e.isUnique = e.isUnique !== void 0 ? e.isUnique : false, e.hide = e.hide !== void 0 ? e.hide : false, e.filter = e.filter !== void 0 ? e.filter : true, e.search = e.search !== void 0 ? e.search : true, e.sort = e.sort !== void 0 ? e.sort : true, e.html = e.html !== void 0 ? e.html : false, e.condition = !s || s === "string" ? "contain" : "equal";
    }
    const w = $([]), l = $(n.page), o = $(n.pagination ? n.pageSize : n.rows.length), x = $(n.sortColumn), y = $(n.sortDirection), L = $(n.totalRows), S = $([]), X = $(null), T = $(n.loading), O = $(n.search), De = n.columns, D = $(null), ee = $(null);
    let V = $(0);
    const Pe = $(230);
    Ae(() => {
      z();
    }), k({
      reset() {
        Ie();
      },
      getSelectedRows() {
        return Ge();
      },
      getColumnFilters() {
        return Ke();
      },
      clearSelectedRows() {
        return We();
      },
      selectRow(e) {
        ie(e);
      },
      unselectRow(e) {
        ue(e);
      },
      isRowSelected(e) {
        return Y(e);
      }
    });
    const He = (e, ...s) => e.replace(/{(\d+)}/g, (u, b) => typeof s[b] < "u" ? s[b] : u), _ = G(() => {
      const e = n.columns.find((s) => s.isUnique);
      return (e == null ? void 0 : e.field) || null;
    }), A = G(() => {
      const e = o.value < 1 ? 1 : Math.ceil(L.value / o.value);
      return Math.max(e || 0, 1);
    }), te = G(() => (l.value - 1) * o.value + 1), le = G(() => {
      const e = l.value * o.value;
      return L.value >= e ? e : L.value;
    }), Te = G(() => {
      let e, s;
      return typeof n.showNumbersCount < "u" && n.showNumbersCount < A.value ? (e = Math.max(l.value - Math.floor(n.showNumbersCount / 2), 1), s = e + n.showNumbersCount - 1, s > A.value && (s = A.value, e = s - n.showNumbersCount + 1)) : (e = 1, s = A.value), Array.from(Array(s + 1 - e).keys()).map((g) => e + g);
    }), z = () => {
      var U, E, I;
      let e = n.rows || [];
      if ((U = n.columns) == null || U.forEach((t) => {
        t.filter && (t.value !== void 0 && t.value !== null && t.value !== "" || t.condition === "is_null" || t.condition == "is_not_null") && (t.type === "string" ? t.condition === "contain" ? e = e.filter((r) => {
          var d;
          return (d = r[t.field]) == null ? void 0 : d.toString().toLowerCase().includes(t.value.toLowerCase());
        }) : t.condition === "not_contain" ? e = e.filter((r) => {
          var d;
          return !((d = r[t.field]) != null && d.toString().toLowerCase().includes(t.value.toLowerCase()));
        }) : t.condition === "equal" ? e = e.filter((r) => {
          var d;
          return ((d = r[t.field]) == null ? void 0 : d.toString().toLowerCase()) === t.value.toLowerCase();
        }) : t.condition === "not_equal" ? e = e.filter((r) => {
          var d;
          return ((d = r[t.field]) == null ? void 0 : d.toString().toLowerCase()) !== t.value.toLowerCase();
        }) : t.condition == "start_with" ? e = e.filter((r) => {
          var d;
          return ((d = r[t.field]) == null ? void 0 : d.toString().toLowerCase().indexOf(t.value.toLowerCase())) === 0;
        }) : t.condition == "end_with" && (e = e.filter((r) => {
          var d;
          return ((d = r[t.field]) == null ? void 0 : d.toString().toLowerCase().substr(t.value.length * -1)) === t.value.toLowerCase();
        })) : t.type === "number" ? t.condition === "equal" ? e = e.filter((r) => r[t.field] && parseFloat(r[t.field]) === parseFloat(t.value)) : t.condition === "not_equal" ? e = e.filter((r) => r[t.field] && parseFloat(r[t.field]) !== parseFloat(t.value)) : t.condition === "greater_than" ? e = e.filter((r) => r[t.field] && parseFloat(r[t.field]) > parseFloat(t.value)) : t.condition === "greater_than_equal" ? e = e.filter((r) => r[t.field] && parseFloat(r[t.field]) >= parseFloat(t.value)) : t.condition === "less_than" ? e = e.filter((r) => r[t.field] && parseFloat(r[t.field]) < parseFloat(t.value)) : t.condition === "less_than_equal" && (e = e.filter((r) => r[t.field] && parseFloat(r[t.field]) <= parseFloat(t.value))) : t.type === "date" ? t.condition === "equal" ? e = e.filter((r) => r[t.field] && W(r[t.field]) === t.value) : t.condition === "not_equal" ? e = e.filter((r) => r[t.field] && W(r[t.field]) !== t.value) : t.condition === "greater_than" ? e = e.filter((r) => r[t.field] && W(r[t.field]) > t.value) : t.condition === "less_than" && (e = e.filter((r) => r[t.field] && W(r[t.field]) < t.value)) : t.type === "bool" && (e = e.filter((r) => r[t.field] === t.value)), t.condition === "is_null" ? (e = e.filter((r) => r[t.field] == null || r[t.field] == ""), t.value = "") : t.condition === "is_not_null" && (t.value = "", e = e.filter((r) => r[t.field])));
      }), O.value && e.length) {
        let t = [];
        const r = (n.columns || []).filter((d) => d.search && !d.hide).map((d) => d.field);
        for (var s = 0; s < e.length; s++)
          for (var u = 0; u < r.length; u++)
            if ((E = re(e[s], r[u])) != null && E.toString().toLowerCase().includes(O.value.toLowerCase())) {
              t.push(e[s]);
              break;
            }
        e = t;
      }
      var b = new Intl.Collator(void 0, {
        numeric: true,
        sensitivity: "base"
      });
      const g = y.value === "desc" ? -1 : 1, f = (I = x == null ? void 0 : x.value) == null ? void 0 : I.split(".");
      e.sort((t, r) => {
        var d, he, de, fe, ve, be, pe, ge, ye, Ce, ke, me, _e, we, $e, xe, Se, Fe, Le, qe;
        return f.length === 2 ? b.compare((d = t[f[0]]) == null ? void 0 : d[f[1]], (he = r[f[0]]) == null ? void 0 : he[f[1]]) * g : f.length === 3 ? b.compare((fe = (de = t[f[0]]) == null ? void 0 : de[f[1]]) == null ? void 0 : fe[f[2]], (be = (ve = r[f[0]]) == null ? void 0 : ve[f[1]]) == null ? void 0 : be[f[2]]) * g : f.length === 4 ? b.compare((ye = (ge = (pe = t[f[0]]) == null ? void 0 : pe[f[1]]) == null ? void 0 : ge[f[2]]) == null ? void 0 : ye[f[3]], (me = (ke = (Ce = r[f[0]]) == null ? void 0 : Ce[f[1]]) == null ? void 0 : ke[f[2]]) == null ? void 0 : me[f[3]]) * g : f.length === 5 ? b.compare((xe = ($e = (we = (_e = t[f[0]]) == null ? void 0 : _e[f[1]]) == null ? void 0 : we[f[2]]) == null ? void 0 : $e[f[3]]) == null ? void 0 : xe[f[4]], (qe = (Le = (Fe = (Se = r[f[0]]) == null ? void 0 : Se[f[1]]) == null ? void 0 : Fe[f[2]]) == null ? void 0 : Le[f[3]]) == null ? void 0 : qe[f[4]]) * g : b.compare(t[x.value], r[x.value]) * g;
      }), L.value = e.length || 0;
      const J = e.slice(te.value - 1, le.value);
      w.value = J || [];
    };
    B(
      () => n.loading,
      () => {
        T.value = n.loading;
      }
    );
    const ne = (e) => {
      e ? D.value === e.field ? D.value = null : D.value = e.field : D.value = null;
    }, Oe = () => {
      if (l.value == 1)
        return false;
      l.value--;
    }, Ve = (e) => {
      l.value = e;
    }, Ue = () => {
      if (l.value >= A.value)
        return false;
      l.value++;
    };
    B(() => l.value, () => {
      M(false), z(), a("pageChange", l.value);
    }), B(() => n.rows, () => {
      l.value = 1, M(false), z();
    }), B(() => o.value, () => {
      l.value = 1, M(false), z(), a("pageSizeChange", o.value);
    });
    const oe = (e) => {
      let s = "asc";
      e == x.value && y.value === "asc" && (s = "desc");
      let u = (l.value - 1) * o.value, b = o.value;
      x.value = e, y.value = s, M(false), z(), a("sortChange", { offset: u, limit: b, field: e, direction: s });
    }, se = (e) => {
      X.value = e.length && w.value.length && e.length === w.value.length;
      const s = w.value.filter((u, b) => S.value.includes(_.value ? u[_.value] : b));
      a("rowSelect", s);
    };
    B(() => S.value, se);
    const M = (e) => {
      e ? S.value = w.value.map((s, u) => _.value ? s[_.value] : u) : S.value = [];
    }, ae = () => {
      l.value = 1, M(false), z(), a("filterChange", n.columns);
    };
    B(() => n.search, () => {
      l.value = 1, M(false), z(), a("searchChange", O.value);
    }), B(
      () => n.search,
      () => {
        O.value = n.search;
      }
    );
    const re = (e, s) => {
      var u, b, g, f, J, U, E, I, t, r;
      if (s.includes(".")) {
        const d = s.split(".");
        return d.length === 5 ? (f = (g = (b = (u = e[d[0]]) == null ? void 0 : u[d[1]]) == null ? void 0 : b[d[2]]) == null ? void 0 : g[d[3]]) == null ? void 0 : f[d[4]] : d.length === 4 ? (E = (U = (J = e[d[0]]) == null ? void 0 : J[d[1]]) == null ? void 0 : U[d[2]]) == null ? void 0 : E[d[3]] : d.length === 3 ? (t = (I = e[d[0]]) == null ? void 0 : I[d[1]]) == null ? void 0 : t[d[2]] : (r = e[d[0]]) == null ? void 0 : r[d[1]];
      }
      return e == null ? void 0 : e[s];
    }, W = (e) => {
      try {
        if (!e)
          return "";
        const s = new Date(e), u = s.getDate(), b = s.getMonth() + 1;
        return s.getFullYear() + "-" + (b > 9 ? b : "0" + b) + "-" + (u > 9 ? u : "0" + u);
      } catch {
      }
      return "";
    }, Ee = (e, s) => {
      V.value++, V.value === 1 ? ee.value = setTimeout(() => {
        V.value = 0, n.selectRowOnClick && (Y(s) ? ue(s) : ie(s), se(S.value)), a("rowClick", e);
      }, Pe.value) : V.value === 2 && (clearTimeout(ee.value), V.value = 0, a("rowDBClick", e));
    }, Ie = () => {
      var e;
      (e = n.columns) == null || e.forEach((s, u) => {
        De[u];
      }), O.value = "", l.value = 1, x.value = "id", y.value = "asc", M(false), z();
    }, Ge = () => w.value.filter((s, u) => S.value.includes(_.value ? s[_.value] : u)), Ke = () => n.columns, We = () => {
      S.value = [];
    }, ie = (e) => {
      if (!Y(e)) {
        const s = w.value.find((u, b) => b === e);
        S.value.push(_.value ? s[_.value] : e);
      }
    }, ue = (e) => {
      if (Y(e)) {
        const s = w.value.find((u, b) => b === e);
        S.value = S.value.filter((u) => u !== (_.value ? s[_.value] : e));
      }
    }, Y = (e) => {
      const s = w.value.find((u, b) => b === e);
      return s ? S.value.includes(_.value ? s[_.value] : e) : false;
    };
    return (e, s) => (c(), h("div", Ot, [
      i("div", {
        class: v(["bh-table-responsive", { "bh-min-h-[300px]": T.value }]),
        style: ze({ height: n.stickyHeader && n.height })
      }, [
        i("table", {
          class: v([n.skin])
        }, [
          i("thead", {
            class: v({ "bh-sticky bh-top-0 bh-z-10": n.stickyHeader })
          }, [
            N(Me, {
              all: n,
              currentSortColumn: x.value,
              currentSortDirection: y.value,
              isOpenFilter: D.value,
              checkAll: X.value,
              onSelectAll: M,
              onSortChange: oe,
              onFilterChange: ae,
              onToggleFilterMenu: ne
            }, null, 8, ["currentSortColumn", "currentSortDirection", "isOpenFilter", "checkAll"])
          ], 2),
          i("tbody", null, [
            L.value ? (c(true), h(F, { key: 0 }, P(w.value, (u, b) => (c(), h("tr", {
              key: u[q(_)] ? u[q(_)] : b,
              class: v([typeof n.rowClass == "function" ? m.rowClass(u) : n.rowClass, n.selectRowOnClick ? "bh-cursor-pointer" : ""]),
              onClick: K((g) => Ee(u, b), ["prevent"])
            }, [
              n.hasCheckbox ? (c(), h("td", {
                key: 0,
                class: v({
                  "bh-sticky bh-left-0 bh-bg-blue-light": n.stickyFirstColumn
                })
              }, [
                i("div", Ut, [
                  R(i("input", {
                    "onUpdate:modelValue": s[0] || (s[0] = (g) => S.value = g),
                    type: "checkbox",
                    value: u[q(_)] ? u[q(_)] : b,
                    onClick: s[1] || (s[1] = K(() => {
                    }, ["stop"]))
                  }, null, 8, Et), [
                    [Ze, S.value]
                  ]),
                  i("div", null, [
                    N(Re, { class: "check" })
                  ])
                ])
              ], 2)) : C("", true),
              (c(true), h(F, null, P(n.columns, (g, f) => (c(), h(F, null, [
                g.hide ? C("", true) : (c(), h("td", {
                  key: g.field,
                  class: v([
                    typeof n.cellClass == "function" ? m.cellClass(u) : n.cellClass,
                    f === 0 && n.stickyFirstColumn ? "bh-sticky bh-left-0 bh-bg-blue-light" : "",
                    n.hasCheckbox && f === 0 && n.stickyFirstColumn ? "bh-left-[52px]" : "",
                    g.cellClass ? g.cellClass : ""
                  ])
                }, [
                  q(p)[g.field] ? je(e.$slots, g.field, {
                    key: 0,
                    value: u
                  }) : g.cellRenderer ? (c(), h("div", {
                    key: 1,
                    innerHTML: g.cellRenderer(u)
                  }, null, 8, It)) : (c(), h(F, { key: 2 }, [
                    Be(H(re(u, g.field)), 1)
                  ], 64))
                ], 2))
              ], 64))), 256))
            ], 10, Vt))), 128)) : C("", true),
            !L.value && !T.value ? (c(), h("tr", Gt, [
              i("td", {
                colspan: n.columns.length + 1
              }, H(n.noDataContent), 9, Kt)
            ])) : C("", true),
            !L.value && T.value ? (c(), h(F, { key: 2 }, P(6, (u) => i("tr", {
              key: u,
              class: "!bh-bg-white bh-h-11 !bh-border-transparent"
            }, [
              i("td", {
                colspan: n.columns.length + 1,
                class: "!bh-p-0 !bh-border-transparent"
              }, Jt, 8, Wt)
            ])), 64)) : C("", true)
          ]),
          n.cloneHeaderInFooter ? (c(), h("tfoot", {
            key: 0,
            class: v({ "bh-sticky bh-bottom-0": n.stickyHeader })
          }, [
            N(Me, {
              all: n,
              currentSortColumn: x.value,
              currentSortDirection: y.value,
              isOpenFilter: D.value,
              isFooter: true,
              checkAll: X.value,
              onSelectAll: M,
              onSortChange: oe,
              onFilterChange: ae,
              onToggleFilterMenu: ne
            }, null, 8, ["currentSortColumn", "currentSortDirection", "isOpenFilter", "checkAll"])
          ], 2)) : C("", true)
        ], 2),
        L.value && T.value ? (c(), h("div", Qt, [
          N(Tt)
        ])) : C("", true)
      ], 6),
      n.pagination && L.value ? (c(), h("div", Xt, [
        i("div", Zt, [
          i("div", jt, [
            i("span", el, H(He(n.paginationInfo, L.value ? q(te) : 0, q(le), L.value)), 1),
            n.showPageSize ? R((c(), h("select", {
              key: 0,
              "onUpdate:modelValue": s[2] || (s[2] = (u) => o.value = u),
              class: "bh-pagesize"
            }, [
              (c(true), h(F, null, P(n.pageSizeOptions, (u) => (c(), h("option", {
                value: u,
                key: u
              }, H(u), 9, tl))), 128))
            ], 512)), [
              [Ne, o.value]
            ]) : C("", true)
          ]),
          i("div", ll, [
            n.showFirstPage ? (c(), h("button", {
              key: 0,
              type: "button",
              class: v(["bh-page-item first-page", { disabled: l.value <= 1 }]),
              onClick: s[3] || (s[3] = (u) => l.value = 1)
            }, [
              n.firstArrow ? (c(), h("span", {
                key: 0,
                innerHTML: n.firstArrow
              }, null, 8, nl)) : (c(), h("svg", ol, al))
            ], 2)) : C("", true),
            i("button", {
              type: "button",
              class: v(["bh-page-item previous-page", { disabled: l.value <= 1 }]),
              onClick: Oe
            }, [
              n.previousArrow ? (c(), h("span", {
                key: 0,
                innerHTML: n.previousArrow
              }, null, 8, rl)) : (c(), h("svg", il, cl))
            ], 2),
            n.showNumbers ? (c(true), h(F, { key: 1 }, P(q(Te), (u) => (c(), h("button", {
              key: u,
              type: "button",
              class: v(["bh-page-item", {
                disabled: l.value === u,
                "bh-active": u === l.value
              }]),
              onClick: (b) => Ve(u)
            }, H(u), 11, hl))), 128)) : C("", true),
            i("button", {
              type: "button",
              class: v(["bh-page-item next-page", { disabled: l.value >= q(A) }]),
              onClick: Ue
            }, [
              n.nextArrow ? (c(), h("span", {
                key: 0,
                innerHTML: n.nextArrow
              }, null, 8, dl)) : (c(), h("svg", fl, bl))
            ], 2),
            n.showLastPage ? (c(), h("button", {
              key: 2,
              type: "button",
              class: v(["bh-page-item last-page", { disabled: l.value >= q(A) }]),
              onClick: s[4] || (s[4] = (u) => l.value = q(A))
            }, [
              n.lastArrow ? (c(), h("span", {
                key: 0,
                innerHTML: n.lastArrow
              }, null, 8, pl)) : (c(), h("svg", gl, Cl))
            ], 2)) : C("", true)
          ])
        ])
      ])) : C("", true)
    ]));
  }
});
export {
  xl as default
};
//# sourceMappingURL=@bhplugin_vue3-datatable.js.map
